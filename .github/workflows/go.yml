name: Go

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.0

    - name: Build Linux
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -o output/m3u8-linux-amd64

    - name: Build Linux ARM
      env:
        GOOS: linux
        GOARCH: arm
        GOARM: 7
      run: go build -o output/m3u8-linux-arm-v7

    - name: Build Windows
      env:
        GOOS: windows
        GOARCH: amd64
      run: go build -o output/m3u8-windows-amd64.exe

    - name: Build macOS
      env:
        GOOS: darwin
        GOARCH: amd64
      run: go build -o output/m3u8-darwin-amd64

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: output

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: output

      - name: Create Release
        id: cr
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Debug GITHUB_TOKEN
        run: echo ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Asset
        id: upload-linux-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.cr.outputs.upload_url }} 
          asset_path: output/linux-amd64
          asset_name: linux-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux ARM Asset
        id: upload-linux-arm-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.cr.outputs.upload_url }} 
          asset_path: output/linux-arm
          asset_name: linux-arm
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Asset
        id: upload-windows-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.cr.outputs.upload_url }} 
          asset_path: output/windows-amd64.exe
          asset_name: windows-amd64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Asset
        id: upload-darwin-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.cr.outputs.upload_url }} 
          asset_path: output/darwin-amd64
          asset_name: darwin-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
